(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[434],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=l(r),f=a,d=m["".concat(i,".").concat(f)]||m[f]||c[f]||s;return r?n.createElement(d,u(u({ref:t},p),{},{components:r})):n.createElement(d,u({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,u=new Array(s);u[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:a,u[1]=o;for(var l=2;l<s;l++)u[l]=r[l];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5592:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return u},metadata:function(){return o},toc:function(){return i},default:function(){return p}});var n=r(2122),a=r(9756),s=(r(7294),r(3905)),u={id:"sample-quarkus",title:"Quarkus-Sureness Sample",sidebar_label:"Quarkus-Sureness Sample"},o={unversionedId:"integrate/sample-quarkus",id:"integrate/sample-quarkus",isDocsHomePage:!1,title:"Quarkus-Sureness Sample",description:"quarkus-sureness sample repository",source:"@site/docs/integrate/sample-quarkus.md",sourceDirName:"integrate",slug:"/integrate/sample-quarkus",permalink:"/sureness/docs/integrate/sample-quarkus",editUrl:"https://github.com/dromara/sureness/edit/master/home/docs/integrate/sample-quarkus.md",version:"current",sidebar_label:"Quarkus-Sureness Sample",frontMatter:{id:"sample-quarkus",title:"Quarkus-Sureness Sample",sidebar_label:"Quarkus-Sureness Sample"},sidebar:"docs",previous:{title:"SpringBoot-Sureness Sample(database scheme)",permalink:"/sureness/docs/integrate/sample-tom"},next:{title:"Using Sureness to protect the security of Javalin REST API",permalink:"/sureness/docs/integrate/sample-javalin"}},i=[],l={toc:i};function p(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,s.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/tomsun28/sureness/tree/master/samples/quarkus-sureness"},"quarkus-sureness sample repository"),"    "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Based on ",(0,s.kt)("inlineCode",{parentName:"li"},"quarkus, jax-rs"),"  "),(0,s.kt)("li",{parentName:"ul"},"Load data from default dataSource - ",(0,s.kt)("inlineCode",{parentName:"li"},"sureness.yml")),(0,s.kt)("li",{parentName:"ul"},"Use default sureness config"),(0,s.kt)("li",{parentName:"ul"},"Use default ",(0,s.kt)("inlineCode",{parentName:"li"},"JWT, Basic Auth, Digest auth")," to authenticate and authorize"),(0,s.kt)("li",{parentName:"ul"},"Contain ",(0,s.kt)("inlineCode",{parentName:"li"},"REST API"),"  "),(0,s.kt)("li",{parentName:"ul"},"Project's protected entrance is ",(0,s.kt)("inlineCode",{parentName:"li"},"SurenessFilterExample"),"  "),(0,s.kt)("li",{parentName:"ul"},"Suggest use postman to test")))}p.isMDXComponent=!0}}]);